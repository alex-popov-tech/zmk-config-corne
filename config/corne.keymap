#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define VUKEYS 0
#define UA 1
#define SYM 2
#define PREF 3

/ {
    behaviors {
        mm_comma_semi: mm_comma_semi {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_dot_col: mm_dot_col {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp DOT>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_pipe_bslh: mm_pipe_bslh {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp PIPE>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_lbkt_lbrace: mm_lbkt_lbrace {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LBKT>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_lpr_hash: mm_lpr_hash {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LS(N9)>, <&kp LS(N3)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_lcbr_dollar: mm_lcbr_dollar {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LS(LBKT)>, <&kp LS(N4)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_rcbr_amp: mm_rcbr_amp {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LS(RBKT)>, <&kp LS(N7)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_rpr_star: mm_rpr_star {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LS(N0)>, <&kp LS(N8)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_rbkt: mm_rbkt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp RBKT>, <&kp LS(RBKT)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n3_left: mm_n3_left {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N3>, <&kp LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n4_right: mm_n4_right {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N4>, <&kp RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n7_down: mm_n7_down {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N7>, <&kp DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n8_up: mm_n8_up {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N8>, <&kp UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n9_lt: mm_n9_lt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N9>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_n0_gt: mm_n0_gt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N0>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_t_quot: mm_t_quot {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp T>, <&kp SINGLE_QUOTE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_s_rbkt: mm_s_rbkt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp S>, <&kp RBKT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_u_grv: mm_u_grv {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp U>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_comma_bslh: mm_comma_bslh {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_shtfslash_bslash: mm_shtfslash_bslash {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LS(SLASH)>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_index_home_top_ctrl {
            bindings = <&sk LCTRL>;
            key-positions = <4 16>;
            layers = <0 2>;
            timeout-ms = <50>;
        };

        left_middle_home_top_cmd {
            bindings = <&sk LGUI>;
            key-positions = <15 3>;
            layers = <0 2>;
            timeout-ms = <50>;
        };

        left_ring_home_top_opt {
            bindings = <&sk LALT>;
            key-positions = <14 2>;
            layers = <0 1 2>;
            timeout-ms = <50>;
        };

        right_index_home_top_ctrl {
            bindings = <&sk RCTRL>;
            key-positions = <7 19>;
            layers = <0 2>;
            timeout-ms = <50>;
        };

        right_middle_home_top_cmd {
            bindings = <&sk RGUI>;
            key-positions = <8 20>;
            layers = <0 2>;
            timeout-ms = <50>;
        };

        right_ring_home_top_opt {
            bindings = <&sk RALT>;
            key-positions = <9 21>;
            layers = <0 1 2>;
            timeout-ms = <50>;
        };

        vukeys_to_ua {
            bindings = <&m_f14_ua>;
            key-positions = <38 39>;
            layers = <0>;
            timeout-ms = <80>;
        };

        ua_to_vukeys {
            bindings = <&m_f14_vukeys>;
            key-positions = <38 39>;
            layers = <1>;
            timeout-ms = <80>;
        };

        pwd_l {
            bindings = <&pwd>;
            key-positions = <0 5>;
        };

        zmk_r {
            bindings = <&pwd>;
            key-positions = <6 11>;
        };
    };

    macros {
        m_f14_ua: m_f14_ua {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F14 &to 1>;
            wait-ms = <30>;
            tap-ms = <40>;
        };

        m_f14_vukeys: m_f14_vukeys {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F14 &to 0>;
            wait-ms = <30>;
            tap-ms = <40>;
        };

        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A>;
            label = "PWD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        VUKEYS {
            bindings = <
&kp F13  &kp Q  &kp C  &kp D    &kp M      &kp V      &kp B      &kp W       &kp U        &kp K  &kp SQT         &kp F13
&kp F11  &kp N  &kp S  &kp T    &kp R      &kp L      &kp Y      &kp A       &kp E        &kp O  &kp I           &kp F12
&kp F14  &kp X  &kp F  &kp G    &kp H      &kp Z      &kp SLASH  &kp P       &mm_dot_col  &kp J  &mm_comma_semi  &kp F14
                       &kp ESC  &kp SPACE  &mo SYM    &kp BSPC   &kp LSHIFT  &kp RET
            >;
        };

        UA {
            bindings = <
&trans    &kp Q  &kp W       &kp E   &kp R   &mm_t_quot    &kp Y   &mm_u_grv  &kp I      &kp O      &kp P                 &trans
&kp LBKT  &kp A  &mm_s_rbkt  &kp D   &kp F   &kp G         &kp H   &kp J      &kp K      &kp L      &kp SEMI              &kp DOT
&kp F14   &kp Z  &kp X       &kp C   &kp V   &kp B         &kp N   &kp M      &kp SLASH  &kp COMMA  &mm_shtfslash_bslash  &kp F14
                             &trans  &trans  &trans        &trans  &trans     &trans
            >;
        };

        SYM {
            bindings = <
&trans  &mm_pipe_bslh  &mm_lbkt_lbrace  &mm_lpr_hash  &mm_lcbr_dollar  &trans       &trans     &mm_rcbr_amp  &mm_rpr_star  &mm_rbkt   &kp GRAVE  &trans
&trans  &kp N1         &kp N2           &mm_n3_left   &mm_n4_right     &kp EQUAL    &kp MINUS  &mm_n7_down   &mm_n8_up     &mm_n9_lt  &mm_n0_gt  &trans
&trans  &trans         &trans           &trans        &kp N5           &kp TAB      &kp TAB    &kp N6        &trans        &trans     &trans     &trans
                                        &mo PREF      &trans           &trans       &mo PREF   &trans        &mo PREF
            >;
        };

        PREF {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &none   &none   &none     &none   &none   &none   &none    &none    &none
&kp F1          &kp F2        &kp F3        &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none           &none         &none         &none   &none   &none     &none   &none   &none   &none    &none    &none
                                            &none   &none   &none     &none   &none   &none
            >;
        };
    };
};
